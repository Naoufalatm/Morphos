<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_obz__scheduler_8h_source" xml:lang="en-US">
<title>obz_scheduler.h</title>
<indexterm><primary>include/obz_scheduler.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
9 <emphasis role="preprocessor">#ifndef&#32;OBZ_SCHEDULER_H_</emphasis>
10 <emphasis role="preprocessor">#define&#32;OBZ_SCHEDULER_H_</emphasis>
11 
12 
13 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
15 <emphasis role="preprocessor">#include&#32;&lt;ucontext.h&gt;</emphasis>
16 <emphasis role="preprocessor">#include&#32;&lt;signal.h&gt;</emphasis>
17 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
18 <emphasis role="preprocessor">#include&#32;&lt;stdbool.h&gt;</emphasis>
19 <emphasis role="preprocessor">#include&#32;&lt;sys/time.h&gt;</emphasis>
20 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
21 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
22 
23 
24 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;schedule_next_thread(<emphasis role="keywordtype">void</emphasis>);
25 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_obz__scheduler_8h_1a4dc06da13baa6917b80d3888236b1ada">thread_wrapper</link>(<emphasis role="keywordtype">void</emphasis>);
26 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;setup_timer(<emphasis role="keywordtype">void</emphasis>);
27 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;timer_handler(<emphasis role="keywordtype">int</emphasis>&#32;signum);
28 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_obz__scheduler_8h_1adfadb6ad96125df980076ac41983ceb3">green_thread_create</link>(<emphasis role="keywordtype">void</emphasis>&#32;(*function)(<emphasis role="keywordtype">void</emphasis>*),&#32;<emphasis role="keywordtype">void</emphasis>*&#32;arg);
29 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_obz__scheduler_8h_1a192c95965e87d8680376978cd081b42e">green_thread_run</link>(<emphasis role="keywordtype">void</emphasis>);
30 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_obz__scheduler_8h_1a84d08f4f2aeb282075f1415336d9ed67">setup_fault_tolerance_signal_handler</link>();
31 <emphasis role="keywordtype">void</emphasis>&#32;run();
32 
33 <emphasis role="preprocessor">#define&#32;STACK_SIZE&#32;(1024&#32;*&#32;1024)&#32;&#32;</emphasis><emphasis role="comment">//&#32;1MB&#32;stack&#32;size&#32;(&#32;arbitraire&#32;)</emphasis>
34 <emphasis role="preprocessor">#define&#32;MAX_THREADS&#32;64</emphasis>
35 <emphasis role="preprocessor">#define&#32;TIME_SLICE_MS&#32;256&#32;</emphasis><emphasis role="comment">//&#32;this&#32;is&#32;what&#32;sets&#32;the&#32;context&#32;switichign&#32;(&#32;a&#32;hack&#32;)</emphasis>
36 
37 
38 
39 
40 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;OBZ_SCHEDULER_H_</emphasis>
</programlisting></section>
